/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as MyRecipesIndexImport } from './routes/my-recipes/index'
import { Route as AddRecipeIndexImport } from './routes/add-recipe/index'
import { Route as RecipeIdIndexImport } from './routes/recipe/$id/index'
import { Route as RecipeIdEditRecipeIndexImport } from './routes/recipe/$id/edit-recipe/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MyRecipesIndexRoute = MyRecipesIndexImport.update({
  id: '/my-recipes/',
  path: '/my-recipes/',
  getParentRoute: () => rootRoute,
} as any)

const AddRecipeIndexRoute = AddRecipeIndexImport.update({
  id: '/add-recipe/',
  path: '/add-recipe/',
  getParentRoute: () => rootRoute,
} as any)

const RecipeIdIndexRoute = RecipeIdIndexImport.update({
  id: '/recipe/$id/',
  path: '/recipe/$id/',
  getParentRoute: () => rootRoute,
} as any)

const RecipeIdEditRecipeIndexRoute = RecipeIdEditRecipeIndexImport.update({
  id: '/recipe/$id/edit-recipe/',
  path: '/recipe/$id/edit-recipe/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/add-recipe/': {
      id: '/add-recipe/'
      path: '/add-recipe'
      fullPath: '/add-recipe'
      preLoaderRoute: typeof AddRecipeIndexImport
      parentRoute: typeof rootRoute
    }
    '/my-recipes/': {
      id: '/my-recipes/'
      path: '/my-recipes'
      fullPath: '/my-recipes'
      preLoaderRoute: typeof MyRecipesIndexImport
      parentRoute: typeof rootRoute
    }
    '/recipe/$id/': {
      id: '/recipe/$id/'
      path: '/recipe/$id'
      fullPath: '/recipe/$id'
      preLoaderRoute: typeof RecipeIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/recipe/$id/edit-recipe/': {
      id: '/recipe/$id/edit-recipe/'
      path: '/recipe/$id/edit-recipe'
      fullPath: '/recipe/$id/edit-recipe'
      preLoaderRoute: typeof RecipeIdEditRecipeIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add-recipe': typeof AddRecipeIndexRoute
  '/my-recipes': typeof MyRecipesIndexRoute
  '/recipe/$id': typeof RecipeIdIndexRoute
  '/recipe/$id/edit-recipe': typeof RecipeIdEditRecipeIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add-recipe': typeof AddRecipeIndexRoute
  '/my-recipes': typeof MyRecipesIndexRoute
  '/recipe/$id': typeof RecipeIdIndexRoute
  '/recipe/$id/edit-recipe': typeof RecipeIdEditRecipeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/add-recipe/': typeof AddRecipeIndexRoute
  '/my-recipes/': typeof MyRecipesIndexRoute
  '/recipe/$id/': typeof RecipeIdIndexRoute
  '/recipe/$id/edit-recipe/': typeof RecipeIdEditRecipeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/add-recipe'
    | '/my-recipes'
    | '/recipe/$id'
    | '/recipe/$id/edit-recipe'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/add-recipe'
    | '/my-recipes'
    | '/recipe/$id'
    | '/recipe/$id/edit-recipe'
  id:
    | '__root__'
    | '/'
    | '/add-recipe/'
    | '/my-recipes/'
    | '/recipe/$id/'
    | '/recipe/$id/edit-recipe/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddRecipeIndexRoute: typeof AddRecipeIndexRoute
  MyRecipesIndexRoute: typeof MyRecipesIndexRoute
  RecipeIdIndexRoute: typeof RecipeIdIndexRoute
  RecipeIdEditRecipeIndexRoute: typeof RecipeIdEditRecipeIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddRecipeIndexRoute: AddRecipeIndexRoute,
  MyRecipesIndexRoute: MyRecipesIndexRoute,
  RecipeIdIndexRoute: RecipeIdIndexRoute,
  RecipeIdEditRecipeIndexRoute: RecipeIdEditRecipeIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/add-recipe/",
        "/my-recipes/",
        "/recipe/$id/",
        "/recipe/$id/edit-recipe/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/add-recipe/": {
      "filePath": "add-recipe/index.tsx"
    },
    "/my-recipes/": {
      "filePath": "my-recipes/index.tsx"
    },
    "/recipe/$id/": {
      "filePath": "recipe/$id/index.tsx"
    },
    "/recipe/$id/edit-recipe/": {
      "filePath": "recipe/$id/edit-recipe/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
