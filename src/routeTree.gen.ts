/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MyRecipesIndexRouteImport } from './routes/my-recipes/index'
import { Route as AddRecipeIndexRouteImport } from './routes/add-recipe/index'
import { Route as RecipeIdIndexRouteImport } from './routes/recipe/$id/index'
import { Route as RecipeIdEditRecipeIndexRouteImport } from './routes/recipe/$id/edit-recipe/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MyRecipesIndexRoute = MyRecipesIndexRouteImport.update({
  id: '/my-recipes/',
  path: '/my-recipes/',
  getParentRoute: () => rootRouteImport,
} as any)
const AddRecipeIndexRoute = AddRecipeIndexRouteImport.update({
  id: '/add-recipe/',
  path: '/add-recipe/',
  getParentRoute: () => rootRouteImport,
} as any)
const RecipeIdIndexRoute = RecipeIdIndexRouteImport.update({
  id: '/recipe/$id/',
  path: '/recipe/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const RecipeIdEditRecipeIndexRoute = RecipeIdEditRecipeIndexRouteImport.update({
  id: '/recipe/$id/edit-recipe/',
  path: '/recipe/$id/edit-recipe/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add-recipe': typeof AddRecipeIndexRoute
  '/my-recipes': typeof MyRecipesIndexRoute
  '/recipe/$id': typeof RecipeIdIndexRoute
  '/recipe/$id/edit-recipe': typeof RecipeIdEditRecipeIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add-recipe': typeof AddRecipeIndexRoute
  '/my-recipes': typeof MyRecipesIndexRoute
  '/recipe/$id': typeof RecipeIdIndexRoute
  '/recipe/$id/edit-recipe': typeof RecipeIdEditRecipeIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/add-recipe/': typeof AddRecipeIndexRoute
  '/my-recipes/': typeof MyRecipesIndexRoute
  '/recipe/$id/': typeof RecipeIdIndexRoute
  '/recipe/$id/edit-recipe/': typeof RecipeIdEditRecipeIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/add-recipe'
    | '/my-recipes'
    | '/recipe/$id'
    | '/recipe/$id/edit-recipe'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/add-recipe'
    | '/my-recipes'
    | '/recipe/$id'
    | '/recipe/$id/edit-recipe'
  id:
    | '__root__'
    | '/'
    | '/add-recipe/'
    | '/my-recipes/'
    | '/recipe/$id/'
    | '/recipe/$id/edit-recipe/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddRecipeIndexRoute: typeof AddRecipeIndexRoute
  MyRecipesIndexRoute: typeof MyRecipesIndexRoute
  RecipeIdIndexRoute: typeof RecipeIdIndexRoute
  RecipeIdEditRecipeIndexRoute: typeof RecipeIdEditRecipeIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/my-recipes/': {
      id: '/my-recipes/'
      path: '/my-recipes'
      fullPath: '/my-recipes'
      preLoaderRoute: typeof MyRecipesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/add-recipe/': {
      id: '/add-recipe/'
      path: '/add-recipe'
      fullPath: '/add-recipe'
      preLoaderRoute: typeof AddRecipeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recipe/$id/': {
      id: '/recipe/$id/'
      path: '/recipe/$id'
      fullPath: '/recipe/$id'
      preLoaderRoute: typeof RecipeIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recipe/$id/edit-recipe/': {
      id: '/recipe/$id/edit-recipe/'
      path: '/recipe/$id/edit-recipe'
      fullPath: '/recipe/$id/edit-recipe'
      preLoaderRoute: typeof RecipeIdEditRecipeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddRecipeIndexRoute: AddRecipeIndexRoute,
  MyRecipesIndexRoute: MyRecipesIndexRoute,
  RecipeIdIndexRoute: RecipeIdIndexRoute,
  RecipeIdEditRecipeIndexRoute: RecipeIdEditRecipeIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
