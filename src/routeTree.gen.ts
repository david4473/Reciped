/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SigninImport } from './routes/signin'
import { Route as IndexImport } from './routes/index'
import { Route as CreateRecipeIndexImport } from './routes/create-recipe/index'
import { Route as RecipeIdIndexImport } from './routes/recipe/$id/index'
import { Route as RecipeIdEditIndexImport } from './routes/recipe/$id/edit/index'

// Create/Update Routes

const SigninRoute = SigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CreateRecipeIndexRoute = CreateRecipeIndexImport.update({
  id: '/create-recipe/',
  path: '/create-recipe/',
  getParentRoute: () => rootRoute,
} as any)

const RecipeIdIndexRoute = RecipeIdIndexImport.update({
  id: '/recipe/$id/',
  path: '/recipe/$id/',
  getParentRoute: () => rootRoute,
} as any)

const RecipeIdEditIndexRoute = RecipeIdEditIndexImport.update({
  id: '/recipe/$id/edit/',
  path: '/recipe/$id/edit/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/create-recipe/': {
      id: '/create-recipe/'
      path: '/create-recipe'
      fullPath: '/create-recipe'
      preLoaderRoute: typeof CreateRecipeIndexImport
      parentRoute: typeof rootRoute
    }
    '/recipe/$id/': {
      id: '/recipe/$id/'
      path: '/recipe/$id'
      fullPath: '/recipe/$id'
      preLoaderRoute: typeof RecipeIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/recipe/$id/edit/': {
      id: '/recipe/$id/edit/'
      path: '/recipe/$id/edit'
      fullPath: '/recipe/$id/edit'
      preLoaderRoute: typeof RecipeIdEditIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/create-recipe': typeof CreateRecipeIndexRoute
  '/recipe/$id': typeof RecipeIdIndexRoute
  '/recipe/$id/edit': typeof RecipeIdEditIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/create-recipe': typeof CreateRecipeIndexRoute
  '/recipe/$id': typeof RecipeIdIndexRoute
  '/recipe/$id/edit': typeof RecipeIdEditIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/create-recipe/': typeof CreateRecipeIndexRoute
  '/recipe/$id/': typeof RecipeIdIndexRoute
  '/recipe/$id/edit/': typeof RecipeIdEditIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signin'
    | '/create-recipe'
    | '/recipe/$id'
    | '/recipe/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/signin' | '/create-recipe' | '/recipe/$id' | '/recipe/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/signin'
    | '/create-recipe/'
    | '/recipe/$id/'
    | '/recipe/$id/edit/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SigninRoute: typeof SigninRoute
  CreateRecipeIndexRoute: typeof CreateRecipeIndexRoute
  RecipeIdIndexRoute: typeof RecipeIdIndexRoute
  RecipeIdEditIndexRoute: typeof RecipeIdEditIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SigninRoute: SigninRoute,
  CreateRecipeIndexRoute: CreateRecipeIndexRoute,
  RecipeIdIndexRoute: RecipeIdIndexRoute,
  RecipeIdEditIndexRoute: RecipeIdEditIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/signin",
        "/create-recipe/",
        "/recipe/$id/",
        "/recipe/$id/edit/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/create-recipe/": {
      "filePath": "create-recipe/index.tsx"
    },
    "/recipe/$id/": {
      "filePath": "recipe/$id/index.tsx"
    },
    "/recipe/$id/edit/": {
      "filePath": "recipe/$id/edit/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
